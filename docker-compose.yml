version: '3.8'

services:
  # Banco de dados PostgreSQL (Render)
  postgres:
    image: postgres:15
    container_name: tarefas-postgres
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: vElqqRldCgAuj0ZbXP76I6mTZQ5uOpSo
      POSTGRES_DB: tarefas_db_6kjg
      POSTGRES_USER: tarefas_db_6kjg_user
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - tarefas-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tarefas_db_6kjg_user"]
      timeout: 20s
      retries: 10

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tarefas-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=tarefas_db_6kjg_user
      - DB_PASSWORD=vElqqRldCgAuj0ZbXP76I6mTZQ5uOpSo
      - DB_NAME=tarefas_db_6kjg
      - DB_SSL=false
      - BETTERSTACK_SOURCE_TOKEN=${BETTERSTACK_SOURCE_TOKEN:-WP1Eq5fRkv7m44iNWPMUngLJ}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - tarefas-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local

networks:
  tarefas-network:
    driver: bridge 